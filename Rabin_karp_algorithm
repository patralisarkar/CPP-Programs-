#include <iostream>
#include <cstdio>
#include <string>
using namespace std;

void RabinKarpAlgo(string strText, string PatternText)
{
    if (strText.length() && PatternText.length())
    {
        int lt = strText.length();
        int mt = PatternText.length();
        int i, j;
        int s = 0, p = 0;
        const int pm = 256;
        const int q = 101;
        int h = 1;
        bool flag = false;

        for (i = 0; i < mt - 1; i++)
            h = (h * pm) % q;

        for (i = 0; i < mt; i++)
        {
            s = (pm * s + strText[i]) % q;
            p = (pm * p + PatternText[i]) % q;
        }

        for (i = 0; i <= lt - mt; i++)
        {
            if (s == p)
            {
                for (j = 0; j < mt; j++)
                    if (strText[i + j] != PatternText[j])
                        break;
                if (j == mt)
                {
                    cout << "Pattern found at pos: " << i + 1 << endl;
                    flag = true;
                }
            }

            s = (pm * (s - h * strText[i]) + strText[i + mt]) % q;
            if (s < 0)
                s = s + q;
        }
        if (!flag)
            cout << "Pattern not found.." << endl;
        return;
    }
    if ((strText.empty()) && (PatternText.empty()))
    {
        cout << "Text and pattern cannot be empty.." << endl;
    }
    else if (strText.empty())
    {
        cout << "Text  cannot be empty.." << endl;
    }
    else
    {
        cout << "Pattern cannot be empty.." << endl;
    }
    return;
}

int main()
{
    freopen("input.txt", "r", stdin);

    string strText, PatternText;
    getline(cin, strText);
    getline(cin, PatternText);
    RabinKarpAlgo(strText, PatternText);
    return 0;
}
