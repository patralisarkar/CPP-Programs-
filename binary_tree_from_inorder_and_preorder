/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 
 TreeNode* build(vector<int>&in,vector<int>& pre,int low,int high,int& po){
     
     if(low>high) return NULL;
     TreeNode* T=new TreeNode(pre[po++]);
     int i;
     for( i=low;i<=high;i++){
         if(in[i]==pre[po-1])
         break;
     }
     T->left=build(in,pre,low,i-1,po);
     T->right=build(in,pre,i+1,high,po);
     return T;
 }
 
 
TreeNode* Solution::buildTree(vector<int> &A, vector<int> &B) {
    int high=B.size()-1, low=0;
    int po=0;
    return build(B,A,low,high,po);
    
}
